name: GrooveForge Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run quick tests
      run: ./test-quick.sh
    
    - name: Run full test suite
      run: ./test-suite.sh
      continue-on-error: true  # Some tests may fail without Ollama
    
    - name: Upload test logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs-node-${{ matrix.node-version }}
        path: /tmp/grooveforge-*.log
        retention-days: 7

  test-with-ollama:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install Ollama
      run: |
        curl -fsSL https://ollama.ai/install.sh | sh
        ollama serve &
        sleep 5
        ollama pull llama3.2:1b  # Use smallest model for CI
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run full test suite with Ollama
      run: |
        export OLLAMA_MODEL=llama3.2:1b
        ./test-suite.sh
    
    - name: Upload test logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs-ollama
        path: /tmp/grooveforge-*.log
        retention-days: 7